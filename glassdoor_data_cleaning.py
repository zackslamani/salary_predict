#!/usr/bin/env python3# -*- coding: utf-8 -*-"""Created on Mon Nov 16 12:58:51 2020@author: slamani"""import pandas as pddf = pd.read_csv('glassdoor_jobs.csv')#salary parsingdf['hourly'] = df['Salary Estimate'].apply(lambda x: 1 if 'par heure' in x.lower() else 0)df['employer_provided'] = df['Salary Estimate'].apply(lambda x: 1 if "salaire fourni par l'employeur:" in x.lower() else 0)df= df[df['Salary Estimate'] != '-1']salary = df['Salary Estimate'].apply(lambda x: x.split('(')[0])minus_kd = salary.apply(lambda x: x.replace('k', '').replace('$', ''))min_hr = minus_kd.apply(lambda x: x.lower().replace('par heure', '').replace("salaire fourni par l'employeur:",''))df['min_salary'] = min_hr.apply(lambda x: int(x.split('-')[0]))df['max_salary'] = min_hr.apply(lambda x: int(x.split('-')[1]))df['avg_salary'] = (df.min_salary+df.max_salary)/2#company name text onlydf['company_txt'] = df.apply(lambda x: x['Company Name'] if x['Rating'] <0 else x['Company Name'][:-3], axis = 1)#state fielddf['job_state'] = df['Location'].apply(lambda x: x.split(',')[1])df.job_state.value_counts()#age of companydf['Founded']= df.Founded.apply(lambda x: int(x) if x.isdigit() else '0')df['Founded']= pd.to_numeric(df['Founded'])df['age'] = df.Founded.apply(lambda x: x if x <1 else 2020 - x)#parsing of job description (python, ect.)#pythondf['python_yn'] = df['Job Description'].apply(lambda  x: 1 if 'python' in x.lower() else 0)#r studiodf['R_yn'] = df['Job Description'].apply(lambda  x: 1 if 'r studio' in x.lower() or 'r-studio' in x.lower() else 0)#sparkdf['spark']= df['Job Description'].apply(lambda  x: 1 if 'spark' in x.lower() else 0)#awsdf['aws']= df['Job Description'].apply(lambda  x: 1 if 'aws' in x.lower() else 0)#exceldf['excel']= df['Job Description'].apply(lambda  x: 1 if 'excel' in x.lower() else 0)df.columnsdf['Unnamed: 0'] = df.indexcol_name="Unnamed: 0"first_col = df.pop(col_name)df.insert(0, col_name, first_col)df_out = df.drop(['Unnamed: 0'], axis=1)df_out.to_csv('salary_data_cleaning.csv', index=False)df = pd.read_csv('salary_data_cleaning.csv')